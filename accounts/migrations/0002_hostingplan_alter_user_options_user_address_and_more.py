# Generated by Django 5.0.7 on 2025-07-04 03:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HostingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del Plan')),
                ('plan_type', models.CharField(choices=[('basic', 'Básico'), ('standard', 'Estándar'), ('premium', 'Premium'), ('enterprise', 'Empresarial')], max_length=20, verbose_name='Tipo de Plan')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio Mensual')),
                ('price_yearly', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio Anual')),
                ('storage_gb', models.IntegerField(verbose_name='Almacenamiento (GB)')),
                ('bandwidth_gb', models.IntegerField(verbose_name='Ancho de Banda (GB)')),
                ('email_accounts', models.IntegerField(verbose_name='Cuentas de Email')),
                ('databases', models.IntegerField(verbose_name='Bases de Datos')),
                ('domains', models.IntegerField(verbose_name='Dominios')),
                ('ssl_included', models.BooleanField(default=True, verbose_name='SSL Incluido')),
                ('backup_daily', models.BooleanField(default=True, verbose_name='Backup Diario')),
                ('support_24_7', models.BooleanField(default=False, verbose_name='Soporte 24/7')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Plan de Hosting',
                'verbose_name_plural': 'Planes de Hosting',
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.TextField(blank=True, null=True, verbose_name='Dirección'),
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Ciudad'),
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='País'),
        ),
        migrations.AlterField(
            model_name='user',
            name='company',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Empresa'),
        ),
        migrations.AlterField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='two_factor_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('admin', 'Administrador'), ('client', 'Cliente')], default='client', max_length=10),
        ),
        migrations.CreateModel(
            name='ClientService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type', models.CharField(choices=[('hosting', 'Hosting'), ('domain', 'Dominio'), ('email', 'Email'), ('ssl', 'Certificado SSL'), ('backup', 'Backup'), ('maintenance', 'Mantenimiento'), ('development', 'Desarrollo Web'), ('seo', 'SEO')], max_length=20, verbose_name='Tipo de Servicio')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del Servicio')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('expiry_date', models.DateField(verbose_name='Fecha de Vencimiento')),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Mensual'), ('quarterly', 'Trimestral'), ('semi_annual', 'Semestral'), ('yearly', 'Anual'), ('biennial', 'Bienal')], max_length=20, verbose_name='Ciclo de Facturación')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('status', models.CharField(choices=[('active', 'Activo'), ('suspended', 'Suspendido'), ('expired', 'Vencido'), ('cancelled', 'Cancelado')], default='active', max_length=20, verbose_name='Estado')),
                ('auto_renew', models.BooleanField(default=True, verbose_name='Renovación Automática')),
                ('domain_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre de Dominio')),
                ('server_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP del Servidor')),
                ('cpanel_username', models.CharField(blank=True, max_length=50, null=True, verbose_name='Usuario cPanel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
                ('hosting_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.hostingplan', verbose_name='Plan de Hosting')),
            ],
            options={
                'verbose_name': 'Servicio de Cliente',
                'verbose_name_plural': 'Servicios de Clientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('expiry_warning', 'Aviso de Vencimiento'), ('expired', 'Servicio Vencido'), ('suspended', 'Servicio Suspendido'), ('renewed', 'Servicio Renovado'), ('invoice', 'Factura Generada')], max_length=20, verbose_name='Tipo de Notificación')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensaje')),
                ('is_read', models.BooleanField(default=False, verbose_name='Leído')),
                ('sent_via_email', models.BooleanField(default=False, verbose_name='Enviado por Email')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.clientservice')),
            ],
            options={
                'verbose_name': 'Notificación de Servicio',
                'verbose_name_plural': 'Notificaciones de Servicios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(max_length=254, verbose_name='Dirección de Email')),
                ('password', models.CharField(max_length=100, verbose_name='Contraseña')),
                ('quota_mb', models.IntegerField(default=1000, verbose_name='Cuota (MB)')),
                ('used_mb', models.IntegerField(default=0, verbose_name='Espacio Usado (MB)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('forward_to', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Reenviar a')),
                ('autoresponder_enabled', models.BooleanField(default=False, verbose_name='Autorespuesta Habilitada')),
                ('autoresponder_message', models.TextField(blank=True, null=True, verbose_name='Mensaje de Autorespuesta')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_accounts', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_accounts', to='accounts.clientservice')),
            ],
            options={
                'verbose_name': 'Cuenta de Email',
                'verbose_name_plural': 'Cuentas de Email',
                'unique_together': {('email_address',)},
            },
        ),
    ]
